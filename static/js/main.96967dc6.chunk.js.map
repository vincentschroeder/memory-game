{"version":3,"sources":["helper.js","components/PlayerBox.js","components/PlayerSelector.js","components/Card.js","loader.svg","Api.js","App.js","index.js"],"names":["shuffle","array","i","length","randomKey","Math","floor","random","randomElement","getWinners","players","reduce","winners","player","score","push","PlayerBox","currentPlayer","className","map","key","id","name","PlayerSelector","handlePlayerNameChange","handlePlayerSubmit","handleClickStartGame","onSubmit","type","value","onChange","placeholder","slice","onClick","Card","card","visible","isEmpty","clickHandler","style","backgroundImage","photoUrl","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","transform","attributeName","calcMode","values","keyTimes","dur","begin","repeatCount","_ref","svgRef","title","props","width","height","viewBox","preserveAspectRatio","ref","ForwardRef","forwardRef","fetchPhotos","callback","fetch","method","headers","then","data","json","res","photos","items","photo","catch","error","App","defaultState","winner","cards","visibleCards","emptyCards","currentState","state","machine","initial","states","selectingPlayers","on","START_GAME","ADD_PLAYER","startingGame","FETCH_CARDS","fetchingCards","CARDS_FETCHED","FETCH_FAILED","fetchingError","waitingForNextTurn","REVEAL_CARD","GAME_ENDED","reavalingCards","CARDS_MATCHED","CARDS_MISMATCHED","gameEnded","NEW_GAME","commands","addPlayer","startGame","fetchCards","payload","revealCard","transition","action","nextState","setState","handleClickNewGame","handleCardClick","cardIndex","e","preventDefault","resetScores","p","isGameOver","isSecondReveal","matched","newVisibleCards","matchCards","mismatchCards","setTimeout","getNextPlayer","includes","Array","w","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96967dc6.chunk.js","sourcesContent":["/**\n * Shuffles and array\n * Wy is this not a build in js function? :)\n */\nexport const shuffle = array => {\n  for (let i = array.length - 1; i > 0; i--) {\n    let randomKey = Math.floor(Math.random() * i);\n    let randomElement = array[randomKey];\n    array[randomKey] = array[i];\n    array[i] = randomElement;\n  }\n  return array;\n};\n\n/**\n * Determine the winner(s) based on the score\n */\nexport const getWinners = players => {\n  return players.reduce((winners, player) => {\n    if (!winners.length || (winners.length && player.score === winners[0].score)) {\n      winners.push(player);\n    } else if (player.score > winners[0].score) {\n      winners = [player];\n    }\n    return winners;\n  }, []);\n};\n","import React from 'react';\n\nexport const PlayerBox = ({ players, currentPlayer }) => (\n  <div className=\"playerBox\">\n    <div>\n      <div className=\"player\">\n        <small>Name</small> <small>Score</small>\n      </div>\n      {players.map(player => (\n        <div\n          key={player.id}\n          className={currentPlayer.id === player.id ? 'player activePlayer' : 'player'}\n        >\n          <span>{player.name}</span> <div>{player.score} Points</div>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport const PlayerSelector = ({\n  players,\n  currentPlayer,\n  handlePlayerNameChange,\n  handlePlayerSubmit,\n  handleClickStartGame\n}) => {\n  return (\n    <div className=\"playerSelector\">\n      <h2>\n        Welcome to <span>EyeEmory!</span>\n      </h2>\n      <div>The most beautiful memory game you've ever played.</div>\n      <br />\n      <div>\n        <form onSubmit={handlePlayerSubmit}>\n          Player {currentPlayer.id}:\n          <input\n            type=\"text\"\n            name=\"playerName\"\n            value={currentPlayer.name}\n            onChange={handlePlayerNameChange}\n            placeholder={`Name of Player ${currentPlayer.id}`}\n          />\n          <button type=\"submit\">Add Player</button>\n        </form>\n      </div>\n      {players.length > 0 && (\n        <div className=\"registered\">\n          Horray, <span>{players.slice(-1)[0].name}</span> is in the game!\n        </div>\n      )}\n\n      {players.length > 0 && (\n        <div>\n          <button onClick={handleClickStartGame}>Start Game</button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Card = ({ card, visible, isEmpty, clickHandler }) => {\n  const className = isEmpty ? 'invisible card' : visible ? 'visible card' : 'card';\n  const style = visible || isEmpty ? { backgroundImage: `url(${card.photoUrl})` } : {};\n\n  return (\n    <div style={style} className={className} onClick={isEmpty || visible ? null : clickHandler}>\n      {!visible && !isEmpty && <small>EyeEm</small>}\n    </div>\n  );\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 50,\n  cy: 50,\n  fill: \"none\",\n  stroke: \"#fff\",\n  strokeWidth: 10,\n  r: 35,\n  strokeDasharray: \"164.93361431346415 56.97787143782138\",\n  transform: \"rotate(137.143 50 50)\"\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"rotate\",\n  calcMode: \"linear\",\n  values: \"0 50 50;360 50 50\",\n  keyTimes: \"0;1\",\n  dur: \"1.4s\",\n  begin: \"0s\",\n  repeatCount: \"indefinite\"\n}));\n\nvar SvgLoader = function SvgLoader(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    className: \"lds-rolling\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLoader, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/loader.110eea8b.svg\";\nexport { ForwardRef as ReactComponent };","export const fetchPhotos = callback => {\n  // for simplicity, I hard coded the url & params here\n  // this should be part of a configuration file  as\n  // well I would use axios or similiar as a layer between\n  const url = 'https://api.eyeem.com/photos/popular?limit=10';\n  const clientId = '9iNUTAc4FCsRj5Co6vJgzVySHxuJtL3Y';\n  fetch(url, {\n    method: 'GET',\n    headers: {\n      'X-Client-Id': clientId\n    }\n  })\n    .then(data => data.json())\n    .then(res => {\n      const photos = res.photos.items.map(photo => {\n        return {\n          id: photo.id,\n          photoUrl: photo.photoUrl\n        };\n      });\n      return callback(photos);\n    })\n    .catch(() => {\n      return callback({ error: 'API_FETCHING_ERROR' });\n    });\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport { shuffle, getWinners } from './helper';\nimport { PlayerBox, PlayerSelector, Card } from './components';\nimport { ReactComponent as Loader } from './loader.svg';\nimport { fetchPhotos } from './Api';\n\n/**\n * Main Application which holds the business logic\n */\nclass App extends Component {\n  defaultState = {\n    currentPlayer: {\n      id: 1,\n      name: '',\n      score: 0\n    },\n    players: [],\n    winner: [],\n    cards: [],\n    visibleCards: [],\n    emptyCards: [],\n    currentState: 'selectingPlayers'\n  };\n\n  state = this.defaultState;\n\n  /**\n   * Finite State Machine\n   *\n   * This object describes the main states the app can have and how to\n   * transition to the next state. You can find a visualisation in the\n   * startechart.png in the root. For simplicity I used strings here.\n   * Normally I would create constants for all states & actions.\n   *\n   */\n  machine = {\n    initial: 'selectingPlayers',\n    states: {\n      selectingPlayers: { on: { START_GAME: 'startingGame', ADD_PLAYER: 'selectingPlayers' } },\n      startingGame: { on: { FETCH_CARDS: 'fetchingCards' } },\n      fetchingCards: { on: { CARDS_FETCHED: 'waitingForNextTurn', FETCH_FAILED: 'fetchingError' } },\n      fetchingError: { on: { START_GAME: 'startingGame' } },\n      waitingForNextTurn: { on: { REVEAL_CARD: 'reavalingCards', GAME_ENDED: 'gameEnded' } },\n      reavalingCards: {\n        on: {\n          REVEAL_CARD: 'reavalingCards',\n          CARDS_MATCHED: 'waitingForNextTurn',\n          CARDS_MISMATCHED: 'waitingForNextTurn'\n        }\n      },\n      gameEnded: { on: { NEW_GAME: 'selectingPlayers', START_GAME: 'startingGame' } }\n    }\n  };\n\n  /**\n   * These methods will be executed on entering a specific state\n   */\n  commands = {\n    selectingPlayers: () => this.addPlayer(),\n    startingGame: () => this.startGame(),\n    fetchingCards: () => this.fetchCards(),\n    reavalingCards: payload => this.revealCard(payload),\n    gameEnded: players => this.getWinners(players)\n  };\n\n  /**\n   * The heart of the finite state machine. This manages the state transition\n   * and executes the corresponding commands defined above\n   */\n  transition = (action, payload) => {\n    const nextState = this.machine.states[this.state.currentState].on[action];\n    const command = () => this.commands[nextState] && this.commands[nextState](payload);\n    this.setState({ currentState: nextState }, command);\n  };\n\n  /** Lifecyle methods  */\n  componentDidUpdate() {\n    this.isGameOver() && this.transition('GAME_ENDED', this.state.players);\n  }\n\n  /** User Action Handlers **/\n  handleClickNewGame = () => {\n    this.setState(this.defaultState);\n  };\n\n  handleClickStartGame = () => this.transition('START_GAME');\n\n  handleCardClick = cardIndex => {\n    this.state.visibleCards.length < 2 && this.transition('REVEAL_CARD', { cardIndex });\n  };\n\n  handlePlayerSubmit = e => {\n    e.preventDefault();\n    const { currentPlayer } = this.state;\n    currentPlayer.name && this.transition('ADD_PLAYER');\n  };\n\n  handlePlayerNameChange = e => {\n    this.setState({\n      currentPlayer: {\n        id: this.state.players.length + 1,\n        name: e.target.value,\n        score: 0\n      }\n    });\n  };\n\n  /** Helpers **/\n  resetScores = () => {\n    this.setState({ players: this.state.players.map(p => ({ ...p, score: 0 })) });\n  };\n\n  isGameOver = () => {\n    const { currentState, cards, emptyCards } = this.state;\n    return emptyCards.length === cards.length && currentState === 'waitingForNextTurn';\n  };\n\n  getNextPlayer() {\n    const { players, currentPlayer } = this.state;\n    return players[currentPlayer.id] ? players[currentPlayer.id] : players[0];\n  }\n\n  getWinners = player => {\n    this.setState({\n      winner: getWinners(player)\n    });\n  };\n\n  /** commands **/\n  addPlayer = () => {\n    const { players, currentPlayer } = this.state;\n    this.setState({\n      players: [...players, currentPlayer],\n      currentPlayer: {\n        // TODO: could be improved with real ids\n        id: players.length + 2,\n        name: '',\n        score: 0\n      }\n    });\n  };\n\n  startGame = () => {\n    this.resetScores();\n    this.setState({\n      visibleCards: [],\n      emptyCards: [],\n      winner: [],\n      currentPlayer: this.state.players[0]\n    });\n    this.transition('FETCH_CARDS');\n  };\n\n  fetchCards = () => {\n    fetchPhotos(photos => {\n      return photos.error\n        ? this.transition('FETCH_FAILED')\n        : (() => {\n            const cards = [...photos, ...photos];\n            shuffle(cards);\n            this.setState({\n              cards\n            });\n            this.transition('CARDS_FETCHED');\n          })();\n    });\n  };\n\n  revealCard = ({ cardIndex }) => {\n    const { visibleCards, cards } = this.state;\n    const isSecondReveal = visibleCards.length === 1;\n    const matched = isSecondReveal && cards[cardIndex].id === cards[visibleCards[0]].id;\n    const newVisibleCards = [...visibleCards, cardIndex];\n\n    this.setState({\n      visibleCards: newVisibleCards\n    });\n\n    matched && this.matchCards(newVisibleCards);\n    isSecondReveal && !matched && this.mismatchCards();\n  };\n\n  matchCards = newVisibleCards => {\n    const { emptyCards, players, currentPlayer } = this.state;\n    players[currentPlayer.id - 1].score++;\n    this.setState({\n      emptyCards: [...emptyCards, ...newVisibleCards],\n      visibleCards: [],\n      players\n    });\n    this.transition('CARDS_MATCHED');\n  };\n\n  mismatchCards = () => {\n    setTimeout(() => {\n      this.setState({\n        visibleCards: [],\n        currentPlayer: this.getNextPlayer()\n      });\n      this.transition('CARDS_MISMATCHED');\n    }, 1000);\n  };\n\n  render() {\n    const {\n      currentPlayer,\n      players,\n      currentState,\n      cards,\n      visibleCards,\n      emptyCards,\n      winner\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"background\" />\n        <div className=\"header\">\n          <div className=\"logo\">EyeEmory</div>\n        </div>\n\n        {currentState === 'selectingPlayers' && (\n          <PlayerSelector\n            {...{\n              players,\n              currentPlayer,\n              handlePlayerNameChange: this.handlePlayerNameChange,\n              handlePlayerSubmit: this.handlePlayerSubmit,\n              handleClickStartGame: this.handleClickStartGame\n            }}\n          />\n        )}\n\n        {currentState !== 'selectingPlayers' && <PlayerBox {...{ players, currentPlayer }} />}\n\n        {currentState === 'fetchingCards' && (\n          <div className=\"loader\">\n            <Loader />\n          </div>\n        )}\n\n        {currentState === 'fetchingError' && (\n          <div className=\"centered fetchingError \">\n            <div>Sorry, the connection to the image server is not available, please try again.</div>\n            <button onClick={this.handleClickStartGame}>Try again</button>\n          </div>\n        )}\n\n        {(currentState === 'waitingForNextTurn' || currentState === 'reavalingCards') && (\n          <div className=\"cards\">\n            {cards.map((card, i) => (\n              <Card\n                isEmpty={emptyCards.includes(i)}\n                visible={visibleCards.includes(i)}\n                key={i}\n                card={card}\n                clickHandler={() => this.handleCardClick(i)}\n              />\n            ))}\n\n            {/* Flexbox: fix to fill empty cards to arange the last cards correctly */}\n            {[...Array(10).keys()].map(key => (\n              <div key={key} className=\"emptyFillers\" />\n            ))}\n          </div>\n        )}\n\n        {currentState === 'gameEnded' && (\n          <div className=\"congrats\">\n            <div>\n              <h2>Congratulations!</h2>\n              The {winner.length > 1 ? 'winners are' : 'winner is'}\n            </div>\n            {winner.map((w, i) => (\n              <div key={i}>{w.name}</div>\n            ))}\n            <button onClick={this.handleClickNewGame}>Start a new Game</button>\n            <button onClick={this.handleClickStartGame}>Revenge</button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}